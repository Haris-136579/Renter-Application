const mongoose = require('mongoose');

const paymentSchema = new mongoose.Schema({
  property: { 
    type: mongoose.Schema.Types.ObjectId, 
    ref: 'Property', 
    required: true 
  }, // The property being rented
  renter: { 
    type: mongoose.Schema.Types.ObjectId, 
    ref: 'Person', 
    required: true 
  }, // The person making the payment
  amount: { 
    type: Number, 
    required: true 
  }, // Payment amount in the smallest currency unit (e.g., cents for USD)
  currency: { 
    type: String, 
    default: 'usd', 
    required: true 
  }, // Payment currency
  paymentStatus: { 
    type: String, 
    enum: ['succeeded', 'failed', 'pending'], 
    default: 'pending' 
  }, // Current status of the payment
  stripePaymentId: { 
    type: String, 
    required: true 
  }, // The ID of the payment in Stripe
  stripeCustomerId: { 
    type: String 
  }, // (Optional) Stripe customer ID, if customers are being created for repeated payments
  receiptUrl: { 
    type: String 
  }, // URL for the payment receipt (generated by Stripe)
  metadata: { 
    type: Object, 
    default: {} 
  }, // Additional custom metadata (e.g., propertyId, renter details)
  createdAt: { 
    type: Date, 
    default: Date.now 
  }, // Timestamp for when the payment was initiated
  updatedAt: { 
    type: Date, 
    default: Date.now 
  }, // Timestamp for updates like payment confirmation
}, { timestamps: true });

// Automatically update the `updatedAt` field on document update
paymentSchema.pre('save', function (next) {
  this.updatedAt = Date.now();
  next();
});

module.exports = mongoose.model('Payment', paymentSchema);
